#   Potato [type, price, maxSize, marketPotential, processingCompanyID, storageFacilityID, farmID]
CREATE TABLE Potato
(
    type                VARCHAR(255) UNIQUE NOT NULL,
    price               INT,
    maxSize             DOUBLE,
#     MarketPotential
    processingCompanyID INT,
    storageFacilityID   INT,
    farmID              INT,
    PRIMARY KEY (type),
    FOREIGN KEY (processingCompanyID) REFERENCES ProcessingCompany (ID),
    Foreign Key (storageFacilityID) REFERENCES StorageFacility (ID),
    FOREIGN KEY (farmID) REFERENCES Farm (ID)
);

ALTER TABLE potato
ADD CONSTRAINT UNIQUE(type);

# alter table xx drop primary key, add primary key(k1, k2, k3);
ALTER TABLE potato DROP PRIMARY KEY, ADD PRIMARY KEY (type)

#     Farm [ID, Address, Location, Size, totalOutput, certificationAgencyID, certificationGrade, seedSupplierID]
CREATE TABLE Farm
(
    ID                    INT UNIQUE NOT NULL,
    address               VARCHAR(255),
    location              VARCHAR(255),
    size                  INT,
    totalOutput           DOUBLE,
    certificationAgencyID INT,
    certificationGrade    CHAR,
    seedSupplierID        INt,
    PRIMARY KEY (ID),
    FOREIGN KEY (certificationAgencyID) REFERENCES CertificationAgency (companyID),
    FOREIGN KEY (seedSupplierID) REFERENCES SeedSupplier (ID)
);

#     Farmer [ID, name, phone, shift, managerID, FarmID]
CREATE TABLE Farmer
(
    ID        INT UNIQUE NOT NULL,
    name      VARCHAR(255),
    phone     INT,
    shift     INT,
    managerID INT,
    farmID    INT,
    PRIMARY KEY (ID),
    FOREIGN KEY (managerID) REFERENCES Farmer (ID),
    FOREIGN KEY (farmID) REFERENCES Farm (ID)
);
#     SeedSupplier [ID, growthRegion]

CREATE TABLE SeedSupplier
(
    ID           INT UNIQUE NOT NULL,
    growthRegion VARCHAR(255),
    PRIMARY KEY (ID)
);


#     SeedType [seedSupplierID, farmID, seedType]
CREATE TABLE SeedType
(
    seedSupplierID INT,
    farmID         INT,
    seedType       VARCHAR(255),
    FOREIGN KEY (seedSupplierID) REFERENCES SeedSupplier (ID),
    FOREIGN KEY (farmID) REFERENCES Farm (ID)
);
###################

CREATE TABLE StorageFacility
(
    ID       INTEGER,
    location CHAR(50),
    capacity INTEGER,
    PRIMARY KEY (ID)
);

CREATE TABLE ProcessingCompany
(
    ID           INTEGER,
    location     CHAR(50),
    wasteCompany INTEGER,
    PRIMARY KEY (ID),
    FOREIGN KEY (wasteCompany) REFERENCES WasteManagement (ID)
);

CREATE TABLE CertificationAgency
(
    companyID INTEGER,
    `name`    CHAR(20),
    region    CHAR(20),
    PRIMARY KEY (companyID)
);

CREATE TABLE WasteManagement
(
    ID       INTEGER,
    location CHAR(50),
    PRIMARY KEY (ID)
);

CREATE TABLE ProcessingCompany
(
    ID           INTEGER,
    location     CHAR(50),
    wasteCompany INTEGER,
    PRIMARY KEY (ID),
    FOREIGN KEY (wasteCompany) REFERENCES WasteManagement (ID)
);

CREATE TABLE ProcessingEquipment
(
    serialNum          INTEGER,
    processingCapacity INTEGER,
    ownerID            INTEGER,
    PRIMARY KEY (serialNum),
    FOREIGN KEY (serialNum) references Equipment (serialNum) ON DELETE CASCADE,
    FOREIGN KEY (ownerID) references ProcessingCompany (ID) ON DELETE SET NULL
);


CREATE TABLE Exporter
(
    companyName VARCHAR(255),
    branchNo    INTEGER,
    PRIMARY KEY (companyName, branchNo)
);

CREATE TABLE Importer
(
    companyName     VARCHAR(255),
    homeCity        VARCHAR(255),
    distributorID   INT,
    exporterCompany VARCHAR(255),
    exporterBranch  INT,
    PRIMARY KEY (companyName, homeCity),
    FOREIGN KEY (distributorID) REFERENCES Distributor (ID),
    FOREIGN KEY (exporterCompany) REFERENCES Exporter (companyName),
    FOREIGN KEY (exporterBranch) REFERENCES Exporter (branchNo)
);

CREATE TABLE Retailer
(
    ID            INT,
    yearlyProfit  FLOAT,
    distributorID INT,
    PRIMARY KEY (ID),
    FOREIGN KEY (distributorID) REFERENCES Distributor (ID)
);

CREATE TABLE Consumer
(
    ID            INT,
    firstName     TEXT,
    middleName    TEXT,
    lastName      TEXT,
    yearlyExpense FLOAT,
    homeRegion    TEXT,
    PRIMARY KEY (ID)
);

CREATE TABLE SellsTo
(
    retailerID INT,
    consumerID INT,
    price      FLOAT,
    PRIMARY KEY (retailerID, consumerID),
    FOREIGN KEY (retailerID) REFERENCES Retailer (ID),
    FOREIGN KEY (consumerID) REFERENCES Consumer (ID)
);

CREATE TABLE StoreLocation
(
    retailerID INT,
    location   VARCHAR(255),
    PRIMARY KEY (retailerID, location),
    FOREIGN KEY (retailerID) REFERENCES Retailer (ID)
);

CREATE TABLE Ingredients
(
    recipeName VARCHAR(50),
    ingredient VARCHAR(255),
    PRIMARY KEY (recipeName, ingredient),
    FOREIGN KEY (recipeName) REFERENCES Recipe (recipeName)
);

CREATE TABLE Equipment
(
    serialNum int,
    purpose   varchar(150),
    PRIMARY KEY (serialNum)
);

CREATE TABLE MarketAnalyst
(
    analystID int,
    name      varchar(50),
    PRIMARY KEY (analystID)
);

CREATE TABLE TradeShow
(
    showID   int,
    location varchar(150),
    PRIMARY KEY (showID)
);

CREATE TABLE Distributor
(
    ID          int,
    tradeShowID int,
    PRIMARY KEY (ID),
    FOREIGN KEY (tradeShowID) REFERENCES TradeShow (showID)
);

CREATE TABLE Advertiser
(
    name        varchar(50),
    company     varchar(50),
    tradeShowID int,
    PRIMARY KEY (name),
    FOREIGN KEY (tradeShowID) REFERENCES TradeShow (showID)
);

CREATE TABLE FarmingEquipment
(
    serialNum int,
    name      varchar(50),
    ownerID   int,
    PRIMARY KEY (serialNum),
    FOREIGN KEY (serialNum) REFERENCES Equipment (serialNum),
    FOREIGN KEY (ownerID) REFERENCES Farmer (ID)
);

CREATE TABLE ShowAttendees
(
    showID        int,
    farmerID      int,
    researcherID  int,
    distributorID int,
    PRIMARY KEY (showID, farmerID, researcherID, distributorID),
    FOREIGN KEY (showID) REFERENCES TradeShow (showID),
    FOREIGN KEY (farmerID) REFERENCES Farmer (ID),
    FOREIGN KEY (researcherID) REFERENCES Researcher (ID),
    FOREIGN KEY (distributorID) REFERENCES Distributor (ID)
);

CREATE TABLE Researcher
(
    ID          int,
    focus       varchar(50),
    yearsActive int,
    supplierID  int,
    PRIMARY KEY (ID),
    FOREIGN KEY (supplierID) REFERENCES SeedSupplier (ID)
);

CREATE TABLE Recipe
(
    recipeName   varchar(50),
    potatoType   varchar(50),
    consumerID   int,
    cookingStyle varchar(50),
    PRIMARY KEY (recipeName, potatoType, consumerID),
    FOREIGN KEY (potatoType) REFERENCES Potato (type),
    FOREIGN KEY (consumerID) REFERENCES Consumer (ID)
);
